class AIDelegate {
    constructor() {
        this.apiKey = null;
        this.apiProvider = 'openai';
        this.currentResults = null;
        this.readCases = new Set(); // –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –∫–µ–π—Å–æ–≤
        this.currentTheme = 'dark'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞
        this.init();
    }

    init() {
        this.bindEvents();
        this.loadSampleRoles();
        this.updateApiKeyPlaceholder();
        this.loadReadCases(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –∫–µ–π—Å—ã –∏–∑ localStorage
        this.initTheme(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–º—É
    }

    bindEvents() {
        // API Provider selection
        document.getElementById('apiProvider').addEventListener('change', (e) => {
            this.apiProvider = e.target.value;
            this.updateApiKeyPlaceholder();
        });

        // API Key input
        document.getElementById('apiKey').addEventListener('input', (e) => {
            this.apiKey = e.target.value.trim();
        });

        // Analyze button
        document.getElementById('analyzeBtn').addEventListener('click', () => {
            this.analyzeRole();
        });

        // Clear button
        document.getElementById('clearBtn').addEventListener('click', () => {
            this.clearResults();
        });

        // Generate more button
        document.getElementById('generateMoreBtn').addEventListener('click', () => {
            this.generateMoreCases();
        });

        // Test API button
        document.getElementById('testApiBtn').addEventListener('click', () => {
            this.testApiConnection();
        });

        // Theme toggle button
        document.getElementById('themeToggle').addEventListener('click', () => {
            this.toggleTheme();
        });

        // Modal events
        document.getElementById('closeModal').addEventListener('click', () => {
            this.closeModal();
        });

        document.getElementById('closeModalBtn').addEventListener('click', () => {
            this.closeModal();
        });

        document.getElementById('copyPrompt').addEventListener('click', () => {
            this.copyPrompt();
        });

        // Close modal on overlay click
        document.querySelector('.modal-overlay').addEventListener('click', () => {
            this.closeModal();
        });

        // Sample role buttons
        document.querySelectorAll('.sample-role-btn').forEach(btn => {
            btn.addEventListener('click', (e) => {
                const role = e.target.getAttribute('data-role');
                document.getElementById('roleDescription').value = role;
            });
        });
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã
    initTheme() {
        const savedTheme = localStorage.getItem('ai-scout-theme');
        if (savedTheme) {
            this.currentTheme = savedTheme;
        } else {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
            this.currentTheme = prefersDark ? 'dark' : 'light';
        }
        this.applyTheme(this.currentTheme);
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
    toggleTheme() {
        this.currentTheme = this.currentTheme === 'dark' ? 'light' : 'dark';
        this.applyTheme(this.currentTheme);
        this.saveTheme();
    }

    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã
    applyTheme(theme) {
        const themeIcon = document.querySelector('.theme-icon');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
        document.body.classList.add('theme-transition');
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É —á–µ—Ä–µ–∑ data-–∞—Ç—Ä–∏–±—É—Ç –∫ document.documentElement
        document.documentElement.setAttribute('data-color-scheme', theme);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É
        if (themeIcon) {
            themeIcon.textContent = theme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
        }
        
        // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ 300ms
        setTimeout(() => {
            document.body.classList.remove('theme-transition');
        }, 300);
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–º—ã –≤ localStorage
    saveTheme() {
        try {
            localStorage.setItem('ai-scout-theme', this.currentTheme);
        } catch (error) {
            console.error('Error saving theme:', error);
        }
    }

    loadSampleRoles() {
        const sampleRoles = [
            "Chief Product Officer (CPO) –≤ IT –∫–æ–º–ø–∞–Ω–∏–∏ —Å –∫–æ–º–∞–Ω–¥–æ–π 100+ —á–µ–ª–æ–≤–µ–∫",
            "Head of Marketing –≤ e-commerce –ø—Ä–æ–µ–∫—Ç–µ",
            "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ –ø—Ä–æ–¥–∞–∂ B2B SaaS",
            "CTO —Å—Ç–∞—Ä—Ç–∞–ø–∞ –≤ —Ñ–∏–Ω—Ç–µ—Ö —Å—Ñ–µ—Ä–µ",
            "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ digital –∞–≥–µ–Ω—Ç—Å—Ç–≤–µ"
        ];
    }

    async analyzeRole() {
        const roleDescription = document.getElementById('roleDescription').value.trim();
        
        console.log('=== Starting analyzeRole ===');
        console.log('Role description:', roleDescription);
        console.log('API key set:', !!this.apiKey);
        console.log('API provider:', this.apiProvider);
        
        if (!this.apiKey) {
            console.error('No API key provided');
            this.showError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞');
            return;
        }

        if (!roleDescription) {
            console.error('No role description provided');
            this.showError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å');
            return;
        }

        this.showLoading(true);
        
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        this.prepareResultsDisplay();
        
        try {
            console.log('Calling AI API...');
            const recommendations = await this.callAI(roleDescription);
            console.log('AI API call successful, displaying results');
            
            // –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            await this.displayResultsGradually(recommendations);
            
            this.showSuccess('‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!');
        } catch (error) {
            console.error('=== Error in analyzeRole ===');
            console.error('Error type:', error.constructor.name);
            console.error('Error message:', error.message);
            console.error('Error stack:', error.stack);
            this.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ä–æ–ª–∏: ' + error.message);
        } finally {
            this.showLoading(false);
        }
    }

    prepareResultsDisplay() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é –∞–Ω–∞–ª–∏–∑–∞
        const analysisSection = document.getElementById('analysisSection');
        analysisSection.classList.remove('hidden');
        
        // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–∫–∏ –∫–µ–π—Å–æ–≤
        const casesList = document.getElementById('casesList');
        casesList.innerHTML = '<div class="loading-cases">–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–µ–π—Å—ã...</div>';
        
        // –û—á–∏—â–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∫–µ–π—Å–∞
        const caseDetails = document.getElementById('caseDetails');
        caseDetails.innerHTML = `
            <div class="empty-state">
                <div class="empty-icon">üìã</div>
                <p>–ö–µ–π—Å—ã –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è, —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏...</p>
            </div>
        `;
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ"
        document.getElementById('generateMoreBtn').classList.add('hidden');
    }

    async displayResultsGradually(recommendations) {
        this.currentResults = recommendations;
        
        // –°–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∞–ª–∏–∑ —Ä–æ–ª–∏ –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏
        document.getElementById('roleAnalysisContent').textContent = recommendations.roleAnalysis;
        document.getElementById('bestPracticesContent').textContent = recommendations.bestPractices;
        
        // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–µ–π—Å–æ–≤
        const casesList = document.getElementById('casesList');
        casesList.innerHTML = '';
        
        // –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –∫–µ–π—Å—ã —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞ "–ø–æ—è–≤–ª–µ–Ω–∏—è"
        for (let i = 0; i < recommendations.automationCases.length; i++) {
            await new Promise(resolve => setTimeout(resolve, 300)); // 300ms –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∫–µ–π—Å–∞–º–∏
            
            const caseItem = recommendations.automationCases[i];
            const caseElement = this.createCaseListItem(caseItem, i);
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –ø–æ—è–≤–ª–µ–Ω–∏—è
            caseElement.style.opacity = '0';
            caseElement.style.transform = 'translateY(20px)';
            casesList.appendChild(caseElement);
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
            setTimeout(() => {
                caseElement.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
                caseElement.style.opacity = '1';
                caseElement.style.transform = 'translateY(0)';
            }, 50);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–µ–π—Å–æ–≤
            this.updateCasesCount(i + 1);
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ"
        setTimeout(() => {
            document.getElementById('generateMoreBtn').classList.remove('hidden');
        }, 500);
    }

    async generateMoreCases() {
        if (!this.apiKey) {
            this.showError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ OpenAI API –∫–ª—é—á');
            return;
        }

        if (!this.currentResults) {
            this.showError('–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ —Ä–æ–ª–∏');
            return;
        }

        const roleDescription = document.getElementById('roleDescription').value.trim();
        this.showMoreLoading(true);
        
        try {
            const existingTitles = this.currentResults.automationCases.map(c => c.title);
            const newRecommendations = await this.callAIForMore(roleDescription, existingTitles);
            this.addMoreResults(newRecommendations);
        } catch (error) {
            console.error('Error generating more cases:', error);
            this.showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–µ–π—Å–æ–≤: ' + error.message);
        } finally {
            this.showMoreLoading(false);
        }
    }

    async callAI(roleDescription) {
        switch (this.apiProvider) {
            case 'openai':
                return await this.callOpenAI(roleDescription);
            case 'anthropic':
                return await this.callClaude(roleDescription);
            case 'gigachat':
                return await this.callGigaChat(roleDescription);
            case 'yandexgpt':
                return await this.callYandexGPT(roleDescription);
            default:
                throw new Error('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä');
        }
    }

    async callOpenAI(roleDescription) {
        const systemPrompt = `–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é AI –∞–≥–µ–Ω—Ç–æ–≤.

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è –¢–û–õ–¨–ö–û –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø–∏—Å–∞–ª –≤ —Å–≤–æ–µ–π —Ä–æ–ª–∏. –ù–ï –¥–æ–±–∞–≤–ª—è–π –æ–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É–ø–æ–º—è–Ω—É—Ç—ã –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ —Ä–æ–ª–∏.

–ê–õ–ì–û–†–ò–¢–ú –ê–ù–ê–õ–ò–ó–ê:
1. –í–ù–ò–ú–ê–¢–ï–õ–¨–ù–û –ø—Ä–æ—á–∏—Ç–∞–π –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–æ–ª–∏ –∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–π –∫–∞–∂–¥—É—é –∑–∞–¥–∞—á—É, —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ (–≥–ª–∞–≥–æ–ª + —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ, –Ω–∞–ø—Ä. ¬´–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é –æ–ø–ª–∞—Ç—É –ø–æ–¥—Ä—è–¥—á–∏–∫–æ–≤¬ª).  
2. –í–´–î–ï–õ–ò —Ç–æ–ª—å–∫–æ —Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–ø–æ–º—è–Ω—É–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å. –û—Ç—Ñ–∏–ª—å—Ç—Ä—É–π –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ–º–æ—Å—Ç—å. –û—Ü–µ–Ω–∏ –∫–∞–∂–¥—É—é –∑–∞–¥–∞—á—É –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º: 1) –Ω–∞–ª–∏—á–∏–µ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤—Ö–æ–¥–∞/–≤—ã—Ö–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö. 2) –ø–æ–≤—Ç–æ—Ä—è–µ–º–æ—Å—Ç—å ‚â• 1 —Ä–∞–∑ –≤ –º–µ—Å—è—Ü. 3) –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å–≥–∏/—Å—Ä–æ–∫/–∫–∞—á–µ—Å—Ç–≤–æ. –°–≥—Ä—É–ø–ø–∏—Ä—É–π –≤–∑–∞–∏–º–æ—Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è.     
3. –ü–†–û–ò–ì–ù–û–†–ò–†–£–ô –æ–±—â–∏–µ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ - —Ñ–æ–∫—É—Å–∏—Ä—É–π—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –æ–ø–∏—Å–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö
4. –î–ª—è –ö–ê–ñ–î–û–ô —É–ø–æ–º—è–Ω—É—Ç–æ–π –∑–∞–¥–∞—á–∏ —Å–æ–∑–¥–∞–π –∫–µ–π—Å —Å AI –∞–≥–µ–Ω—Ç–æ–º
5. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π –†–û–í–ù–û 6 –∫–µ–π—Å–æ–≤ —Å AI –∞–≥–µ–Ω—Ç–∞–º–∏ –¥–ª—è –æ–ø–∏—Å–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
6. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–ø–æ–º—è–Ω—É–ª –º–µ–Ω–µ–µ 6 –∑–∞–¥–∞—á, —Å–æ–∑–¥–∞–π –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫—É—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é –¥–ª—è —ç—Ç–∏—Ö –∑–∞–¥–∞—á (—Ä–∞–∑–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã, –ø–æ–¥–∑–∞–¥–∞—á–∏)

–°–¢–†–û–ì–ò–ï –ü–†–ê–í–ò–õ–ê:
- –ó–ê–ü–†–ï–©–ï–ù–û: –î–æ–±–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É–ø–æ–º–∏–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
- –ó–ê–ü–†–ï–©–ï–ù–û: –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Ç–∏–ø–∞ "email-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ –Ω–∏—Ö –Ω–µ –ø–∏—Å–∞–ª
- –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ—á–Ω—ã–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è —Ä–æ–ª–∏
- –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: –°—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã/—Å–∏—Å—Ç–µ–º—ã, —É–ø–æ–º—è–Ω—É—Ç—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
- –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: –°–æ–∑–¥–∞—Ç—å –†–û–í–ù–û 6 –∫–µ–π—Å–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤ –º–∞—Å—Å–∏–≤–µ automationCases
- –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: –ù–∞–∑–≤–∞–Ω–∏—è –∫–µ–π—Å–æ–≤ –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å–æ —Å–ª–æ–≤–∞ "–∞–≥–µ–Ω—Ç"

–ö–û–ù–¢–ï–ö–°–¢: –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—ã–Ω–æ–∫, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ (Make, n8n, Telegram, Bitrix24, Yandex Cloud), —Ñ–æ–∫—É—Å –Ω–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ.

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–π JSON, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞. –ù–∞—á–Ω–∏ –æ—Ç–≤–µ—Ç —Å—Ä–∞–∑—É —Å {

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê - —Å—Ç—Ä–æ–≥–æ JSON —Å –†–û–í–ù–û 6 –∫–µ–π—Å–∞–º–∏:
{
  "roleAnalysis": "–¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¢–û–õ–¨–ö–û —Ç–µ—Ö –∑–∞–¥–∞—á, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø–∏—Å–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)",
  "bestPractices": "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –¥–ª—è –û–ü–ò–°–ê–ù–ù–´–• –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∑–∞–¥–∞—á (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)", 
  "automationCases": [
    {
      "title": "–∞–≥–µ–Ω—Ç –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏ –ò–ó –û–ü–ò–°–ê–ù–ò–Ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
      "description": "–ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ AI –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –ò–ú–ï–ù–ù–û —ç—Ç–æ–π –∑–∞–¥–∞—á–∏",
      "priority": "–≤—ã—Å–æ–∫–∏–π/—Å—Ä–µ–¥–Ω–∏–π/–Ω–∏–∑–∫–∏–π", 
      "roiEstimate": "10-50%",
      "complexity": "–Ω–∏–∑–∫–∞—è/—Å—Ä–µ–¥–Ω—è—è/–≤—ã—Å–æ–∫–∞—è",
      "tools": ["–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 1", "–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 2"],
      "systemPrompt": "–î–µ—Ç–∞–ª—å–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è AI –∞–≥–µ–Ω—Ç–∞ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –¥–ª—è –≠–¢–û–ô –ö–û–ù–ö–†–ï–¢–ù–û–ô –∑–∞–¥–∞—á–∏ –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è —Ä–æ–ª–∏. –ú–∏–Ω–∏–º—É–º 300 —Å–ª–æ–≤.",
      "automationPipeline": {
        "platform": "Make/n8n",
        "steps": [
          {
            "step": 1,
            "action": "–¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –ö–û–ù–ö–†–ï–¢–ù–û–ô –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            "tool": "–†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç",
            "description": "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —à–∞–≥–∞"
          },
          {
            "step": 2,
            "action": "–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏",
            "tool": "OpenAI/Claude",
            "description": "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —à–∞–≥–∞"
          },
          {
            "step": 3,
            "action": "–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏",
            "tool": "–†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç",
            "description": "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —à–∞–≥–∞"
          }
        ]
      }
    }
  ]
}

–í–ê–ñ–ù–û: –≤ –ø–∞–π–ø–ª–∞–π–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ú–ò–ù–ò–ú–£–ú 3 —à–∞–≥–∞, —Ü–µ–ø–æ—á–∫–∞ —à–∞–≥–æ–≤ –¥–æ–ª–∂–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–∫—Ä—ã–≤–∞—Ç—å –∑–∞–¥–∞—á—É
–í–ê–ñ–ù–û: –í –º–∞—Å—Å–∏–≤–µ automationCases –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –†–û–í–ù–û 6 —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
–í–ê–ñ–ù–û: –ù–∞–∑–≤–∞–Ω–∏—è –í–°–ï–• –∫–µ–π—Å–æ–≤ –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å–æ —Å–ª–æ–≤–∞ "–∞–≥–µ–Ω—Ç" (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–∞–≥–µ–Ω—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è roadmap", "–∞–≥–µ–Ω—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥")

–ü–†–ò–ú–ï–† –ü–†–ê–í–ò–õ–¨–ù–û–ì–û –ü–û–î–•–û–î–ê:
–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª "—É–ø—Ä–∞–≤–ª—è—é roadmap –ø—Ä–æ–¥—É–∫—Ç–∞", —Å–æ–∑–¥–∞–π –∫–µ–π—Å "–∞–≥–µ–Ω—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è roadmap –ø—Ä–æ–¥—É–∫—Ç–∞".
–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª "–∫–æ–æ—Ä–¥–∏–Ω–∏—Ä—É—é –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏", —Å–æ–∑–¥–∞–π –∫–µ–π—Å "–∞–≥–µ–Ω—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏".
–ù–ï –¥–æ–±–∞–≤–ª—è–π –∫–µ–π—Å—ã –ø–æ email –∏–ª–∏ CRM, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ –Ω–∏—Ö –Ω–µ —É–ø–æ–º–∏–Ω–∞–ª.

–ê–ù–ê–õ–ò–ó–ò–†–£–ï–ú–ê–Ø –†–û–õ–¨:
${roleDescription}`;

        console.log('=== API Request Debug Info ===');
        console.log('API Key length:', this.apiKey ? this.apiKey.length : 'not set');
        console.log('API Key starts with sk-:', this.apiKey ? this.apiKey.startsWith('sk-') : false);
        console.log('Role description length:', roleDescription.length);

        const requestBody = {
            model: 'gpt-4o-mini',
            messages: [
                {
                    role: 'system',
                    content: systemPrompt
                }
            ],
            temperature: 0.7,
            max_tokens: 6000,
            stream: false // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è
        };

        console.log('Sending request to OpenAI...');

        try {
            const response = await fetch('https://api.openai.com/v1/chat/completions', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json; charset=utf-8',
                    'Authorization': `Bearer ${this.apiKey}`
                },
                body: JSON.stringify(requestBody)
            });

            console.log('Response status:', response.status);
            console.log('Response ok:', response.ok);

            if (!response.ok) {
                const errorText = await response.text();
                console.error('Error response text:', errorText);
                
                try {
                    const errorData = JSON.parse(errorText);
                    console.error('Parsed error data:', errorData);
                    
                    if (response.status === 401) {
                        throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–ª—é—á–∞ OpenAI.');
                    } else if (response.status === 429) {
                        throw new Error('–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
                    } else if (response.status === 400) {
                        throw new Error('–û—à–∏–±–∫–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ: ' + (errorData.error?.message || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
                    } else {
                        throw new Error(`HTTP ${response.status}: ${errorData.error?.message || errorText}`);
                    }
                } catch (parseError) {
                    console.error('Failed to parse error response:', parseError);
                    throw new Error(`HTTP ${response.status}: ${errorText || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'}`);
                }
            }

            const data = await response.json();
            console.log('Response received, processing...');
            
            let content = data.choices[0].message.content.trim();
            
            console.log('Raw OpenAI response length:', content.length);
            console.log('First 200 chars:', content.substring(0, 200));
            
            // –û—á–∏—Å—Ç–∫–∞ –∏ –ø–∞—Ä—Å–∏–Ω–≥ JSON
            try {
                // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–µ —Å {, –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ JSON
                if (!content.startsWith('{')) {
                    console.log('Response does not start with {, searching for JSON...');
                    const jsonMatch = content.match(/\{[\s\S]*\}/);
                    if (jsonMatch) {
                        content = jsonMatch[0];
                        console.log('Found JSON match');
                    } else {
                        console.error('No JSON found in response');
                        // –ü–æ–ø—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å fallback
                        console.log('Using fallback response');
                        return this.getFallbackResponse();
                    }
                }
                
                // –û—á–∏—Å—Ç–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏
                content = content.replace(/[\u0000-\u001F\u007F-\u009F]/g, "");
                content = content.replace(/[\u201C\u201D]/g, '"').replace(/[\u2018\u2019]/g, "'");
                
                console.log('Attempting to parse JSON...');
                const result = JSON.parse(content);
                console.log('JSON parsed successfully');
                
                // –í–∞–ª–∏–¥–∞—Ü–∏—è
                if (!result.roleAnalysis || !result.bestPractices || !result.automationCases) {
                    console.error('Missing required fields');
                    return this.getFallbackResponse();
                }
                
                if (!Array.isArray(result.automationCases)) {
                    console.error('automationCases is not an array');
                    return this.getFallbackResponse();
                }
                
                // –ï—Å–ª–∏ –º–µ–Ω—å—à–µ 6 –∫–µ–π—Å–æ–≤, –¥–æ–ø–æ–ª–Ω—è–µ–º fallback –¥–∞–Ω–Ω—ã–º–∏
                if (result.automationCases.length < 6) {
                    console.log(`Only ${result.automationCases.length} cases received, padding with fallback`);
                    const fallback = this.getFallbackResponse();
                    const needed = 6 - result.automationCases.length;
                    result.automationCases.push(...fallback.automationCases.slice(0, needed));
                }
                
                // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 6 –∫–µ–π—Å–æ–≤
                result.automationCases = result.automationCases.slice(0, 6);
                
                console.log('Validation passed, returning result');
                return result;
                
            } catch (parseError) {
                console.error('JSON Parse Error:', parseError.message);
                console.error('Content that failed to parse (first 500 chars):', content.substring(0, 500));
                
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –ø—Ä–∏ –æ—à–∏–±–∫–µ –ø–∞—Ä—Å–∏–Ω–≥–∞
                console.log('Parse failed, using fallback response');
                return this.getFallbackResponse();
            }
            
        } catch (networkError) {
            console.error('Network Error:', networkError.message);
            
            if (networkError.name === 'TypeError' && networkError.message.includes('Failed to fetch')) {
                throw new Error('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å OpenAI API. –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –†–æ—Å—Å–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è VPN.');
            } else {
                throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API: ${networkError.message}`);
            }
        }
    }

    async callOpenAIForMore(roleDescription, existingTitles) {
        const systemPrompt = `–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é AI –∞–≥–µ–Ω—Ç–æ–≤. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–ª—É—á–∏–ª –ø–µ—Ä–≤—ã–π –Ω–∞–±–æ—Ä —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∏ —Ö–æ—á–µ—Ç –µ—â–µ 6 –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–• –∫–µ–π—Å–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.

–ö–û–ù–¢–ï–ö–°–¢: –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—ã–Ω–æ–∫, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ (Zapier, UiPath, AI –∞–≥–µ–Ω—Ç—ã), —Ñ–æ–∫—É—Å –Ω–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏ ROI.

–£–ñ–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ù–´–ï –ö–ï–ô–°–´ (–ù–ï –ü–û–í–¢–û–†–Ø–ô –ò–•):
${existingTitles.map(title => `- ${title}`).join('\n')}

–ò–ù–°–¢–†–£–ö–¶–ò–ò:
1. –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π 6 –ù–û–í–´–• –∫–µ–π—Å–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –ù–ï –¥—É–±–ª–∏—Ä—É—é—Ç —É–∂–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ
2. –§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ –±–æ–ª–µ–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–ª–∏ –º–µ–Ω–µ–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö
3. –°–æ–∑–¥–∞–π –¥–µ—Ç–∞–ª—å–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ AI –∞–≥–µ–Ω—Ç–∞
4. –†–∞—Å—Å–º–æ—Ç—Ä–∏ –º–µ–Ω–µ–µ –æ—á–µ–≤–∏–¥–Ω—ã–µ, –Ω–æ –ø–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–π JSON, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞. –ù–∞—á–Ω–∏ –æ—Ç–≤–µ—Ç —Å—Ä–∞–∑—É —Å {

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê - —Å—Ç—Ä–æ–≥–æ JSON:
{
  "automationCases": [
    {
      "title": "–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–ù–ï –ü–û–í–¢–û–†–Ø–Æ–©–ï–ï –£–ñ–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ù–´–ï)",
      "description": "–ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç—Å—è",
      "priority": "–≤—ã—Å–æ–∫–∏–π/—Å—Ä–µ–¥–Ω–∏–π/–Ω–∏–∑–∫–∏–π", 
      "roiEstimate": "30-50%",
      "complexity": "–Ω–∏–∑–∫–∞—è/—Å—Ä–µ–¥–Ω—è—è/–≤—ã—Å–æ–∫–∞—è",
      "tools": ["–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 1", "–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 2"],
      "systemPrompt": "–î–µ—Ç–∞–ª—å–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è AI –∞–≥–µ–Ω—Ç–∞ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏, —Ñ–æ—Ä–º–∞—Ç–æ–º –æ—Ç–≤–µ—Ç–∞ –∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏. –ú–∏–Ω–∏–º—É–º 200 —Å–ª–æ–≤.",
      "automationPipeline": {
        "platform": "Make/n8n",
        "steps": [
          {
            "step": 1,
            "action": "–¢—Ä–∏–≥–≥–µ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ü–æ–ª—É—á–µ–Ω–∏–µ email)",
            "tool": "Gmail/Outlook",
            "description": "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —à–∞–≥–∞"
          },
          {
            "step": 2,
            "action": "–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö",
            "tool": "OpenAI/Claude",
            "description": "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —à–∞–≥–∞"
          }
        ]
      }
    }
  ]
}

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –°–ò–°–¢–ï–ú–ù–´–ú –ü–†–û–ú–ü–¢–ê–ú:
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ, actionable –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
- –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
- –ö—Ä–∏—Ç–µ—Ä–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
- –û–±—Ä–∞–±–æ—Ç–∫–∞ edge cases

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ü–ê–ô–ü–õ–ê–ô–ù–ê–ú –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–ò:
- –ò—Å–ø–æ–ª—å–∑—É–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Make (Integromat) –∏–ª–∏ n8n
- 3-7 —à–∞–≥–æ–≤ –≤ –ø–∞–π–ø–ª–∞–π–Ω–µ
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –∏ –¥–µ–π—Å—Ç–≤–∏—è
- –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ (Gmail, Slack, Telegram, Google Sheets)
- –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑ —Å–ª–æ–∂–Ω–æ–≥–æ –∫–æ–¥–∞

–†–æ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ${roleDescription}`;

        const response = await fetch('https://api.openai.com/v1/chat/completions', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json; charset=utf-8',
                'Authorization': `Bearer ${this.apiKey}`
            },
            body: JSON.stringify({
                model: 'gpt-4o-mini',
                messages: [
                    {
                        role: 'system',
                        content: systemPrompt
                    }
                ],
                temperature: 0.8,
                max_tokens: 4000
            })
        });

        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.error?.message || `HTTP ${response.status}`);
        }

        const data = await response.json();
        let content = data.choices[0].message.content.trim();
        
        console.log('Raw OpenAI response for more cases:', content);
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
        try {
            // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–µ —Å {, –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ JSON
            if (!content.startsWith('{')) {
                const jsonMatch = content.match(/\{[\s\S]*\}/);
                if (jsonMatch) {
                    content = jsonMatch[0];
                } else {
                    throw new Error('JSON –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ');
                }
            }
            
            // –ü–æ–ø—Ä–æ–±—É–µ–º –æ—á–∏—Å—Ç–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
            content = content.replace(/[\u0000-\u001F\u007F-\u009F]/g, "");
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∞–≤—ã—á–∫–∞–º–∏
            content = content.replace(/[\u201C\u201D]/g, '"').replace(/[\u2018\u2019]/g, "'");
            
            const result = JSON.parse(content);
            
            // –ü—Ä–æ–≤–µ—Ä–∏–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
            if (!result.automationCases || !Array.isArray(result.automationCases)) {
                throw new Error('–ù–µ—Ç –∫–µ–π—Å–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤ –æ—Ç–≤–µ—Ç–µ');
            }
            
            return result;
            
        } catch (parseError) {
            console.error('JSON parse error for more cases:', parseError);
            console.error('Content that failed to parse:', content);
            
            // Fallback: —Å–æ–∑–¥–∞–¥–∏–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–∞–∑–æ–≤—ã–µ –∫–µ–π—Å—ã
            const fallbackResponse = {
                automationCases: [
                    {
                        title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏",
                        description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –∏ –º–µ—Å—è—á–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤",
                        priority: "—Å—Ä–µ–¥–Ω–∏–π",
                        roiEstimate: "15-25%",
                        complexity: "—Å—Ä–µ–¥–Ω—è—è",
                        tools: ["Google Sheets API", "Power BI"],
                        systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏. –°–æ–±–∏—Ä–∞–π –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç—Ä–µ–Ω–¥—ã –∏ —Å–æ–∑–¥–∞–≤–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Å –∫–ª—é—á–µ–≤—ã–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏.",
                        automationPipeline: {
                            platform: "Make",
                            steps: [
                                {
                                    step: 1,
                                    action: "–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets",
                                    tool: "Google Sheets API",
                                    description: "–¢—Ä–∏–≥–≥–µ—Ä –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
                                },
                                {
                                    step: 2,
                                    action: "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö",
                                    tool: "Power BI",
                                    description: "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞"
                                },
                                {
                                    step: 3,
                                    action: "–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞",
                                    tool: "Email",
                                    description: "–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –Ω–∞ email —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è"
                                }
                            ]
                        }
                    },
                    {
                        title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π",
                        description: "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö",
                        priority: "–Ω–∏–∑–∫–∏–π",
                        roiEstimate: "10-20%",
                        complexity: "–Ω–∏–∑–∫–∞—è",
                        tools: ["Buffer", "Telegram Bot API"],
                        systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–µ—Ç—è–º–∏. –°–æ–∑–¥–∞–≤–∞–π –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω, –ø–ª–∞–Ω–∏—Ä—É–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ—Å—Ç–æ–≤.",
                        automationPipeline: {
                            platform: "Make",
                            steps: [
                                {
                                    step: 1,
                                    action: "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
                                    tool: "OpenAI",
                                    description: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π"
                                },
                                {
                                    step: 2,
                                    action: "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏",
                                    tool: "Buffer",
                                    description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤ —Å–æ—Ü—Å–µ—Ç–∏"
                                }
                            ]
                        }
                    },
                    {
                        title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
                        description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
                        priority: "—Å—Ä–µ–¥–Ω–∏–π",
                        roiEstimate: "25-35%",
                        complexity: "–≤—ã—Å–æ–∫–∞—è",
                        tools: ["OCR API", "Google Drive API"],
                        systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –ò–∑–≤–ª–µ–∫–∞–π —Ç–µ–∫—Å—Ç –∏–∑ PDF, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –¥–∞–Ω–Ω—ã–µ.",
                        automationPipeline: {
                            platform: "n8n",
                            steps: [
                                {
                                    step: 1,
                                    action: "–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞",
                                    tool: "Google Drive",
                                    description: "–¢—Ä–∏–≥–≥–µ—Ä –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞"
                                },
                                {
                                    step: 2,
                                    action: "–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞",
                                    tool: "OCR API",
                                    description: "–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ"
                                },
                                {
                                    step: 3,
                                    action: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö",
                                    tool: "OpenAI",
                                    description: "–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
                                }
                            ]
                        }
                    },
                    {
                        title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è backup –¥–∞–Ω–Ω—ã—Ö",
                        description: "–†–µ–≥—É–ª—è—Ä–Ω–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
                        priority: "–≤—ã—Å–æ–∫–∏–π",
                        roiEstimate: "40-60%",
                        complexity: "—Å—Ä–µ–¥–Ω—è—è",
                        tools: ["Google Drive API", "Yandex.Disk API"],
                        systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è. –°–ª–µ–¥–∏ –∑–∞ –≤–∞–∂–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏, —Å–æ–∑–¥–∞–≤–∞–π –±—ç–∫–∞–ø—ã –∏ —É–≤–µ–¥–æ–º–ª—è–π –æ —Å—Ç–∞—Ç—É—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–π.",
                        automationPipeline: {
                            platform: "Make",
                            steps: [
                                {
                                    step: 1,
                                    action: "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤",
                                    tool: "File System",
                                    description: "–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
                                },
                                {
                                    step: 2,
                                    action: "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞",
                                    tool: "Google Drive",
                                    description: "–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
                                },
                                {
                                    step: 3,
                                    action: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ",
                                    tool: "Telegram",
                                    description: "–û—Ç—á–µ—Ç –æ —Å—Ç–∞—Ç—É—Å–µ –±—ç–∫–∞–ø–∞"
                                }
                            ]
                        }
                    },
                    {
                        title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤",
                        description: "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ü–µ–Ω –∏ –Ω–æ–≤–æ—Å—Ç–µ–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤",
                        priority: "–Ω–∏–∑–∫–∏–π",
                        roiEstimate: "15-30%",
                        complexity: "—Å—Ä–µ–¥–Ω—è—è",
                        tools: ["Web Scraping", "RSS Parser"],
                        systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤. –û—Ç—Å–ª–µ–∂–∏–≤–∞–π –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω, –Ω–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ –Ω–æ–≤–æ—Å—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–π-–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤.",
                        automationPipeline: {
                            platform: "n8n",
                            steps: [
                                {
                                    step: 1,
                                    action: "–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–æ–≤",
                                    tool: "Web Scraper",
                                    description: "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–æ–≤ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤"
                                },
                                {
                                    step: 2,
                                    action: "–ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π",
                                    tool: "OpenAI",
                                    description: "–í—ã—è–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–∏–º—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π"
                                },
                                {
                                    step: 3,
                                    action: "–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞",
                                    tool: "Slack",
                                    description: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö"
                                }
                            ]
                        }
                    },
                    {
                        title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏",
                        description: "–£—á–µ—Ç –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π",
                        priority: "—Å—Ä–µ–¥–Ω–∏–π",
                        roiEstimate: "20-35%",
                        complexity: "–Ω–∏–∑–∫–∞—è",
                        tools: ["QR Scanner", "Google Sheets"],
                        systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º. –û—Ç—Å–ª–µ–∂–∏–≤–∞–π –¥–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π –æ—Å—Ç–∞—Ç–∫–∏ –∏ –ø–ª–∞–Ω–∏—Ä—É–π –∑–∞–∫—É–ø–∫–∏.",
                        automationPipeline: {
                            platform: "Make",
                            steps: [
                                {
                                    step: 1,
                                    action: "–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ QR-–∫–æ–¥–∞",
                                    tool: "QR Scanner",
                                    description: "–°—á–∏—Ç—ã–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ"
                                },
                                {
                                    step: 2,
                                    action: "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã",
                                    tool: "Google Sheets",
                                    description: "–ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É"
                                },
                                {
                                    step: 3,
                                    action: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤",
                                    tool: "OpenAI",
                                    description: "–ê–Ω–∞–ª–∏–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ–∫—É–ø–∫–∏"
                                }
                            ]
                        }
                    }
                ]
            };
            
            return fallbackResponse;
        }
    }

    displayResults(recommendations) {
        this.currentResults = recommendations;
        
        // Show analysis section
        const analysisSection = document.getElementById('analysisSection');
        analysisSection.classList.remove('hidden');
        
        // Update analysis content
        document.getElementById('roleAnalysisContent').textContent = recommendations.roleAnalysis;
        document.getElementById('bestPracticesContent').textContent = recommendations.bestPractices;
        
        // Show generate more button
        document.getElementById('generateMoreBtn').classList.remove('hidden');
        
        // Display cases in center panel
        this.displayCasesList(recommendations.automationCases);
        
        // Update cases count
        this.updateCasesCount(recommendations.automationCases.length);
    }

    displayCasesList(cases) {
        const casesList = document.getElementById('casesList');
        casesList.innerHTML = '';
        
        cases.forEach((caseItem, index) => {
            const caseElement = this.createCaseListItem(caseItem, index);
            casesList.appendChild(caseElement);
        });
    }

    createCaseListItem(caseItem, index) {
        const caseId = this.generateCaseId(caseItem, index);
        const isRead = this.readCases.has(caseId);
        
        console.log(`Creating case ${index}: ID=${caseId}, isRead=${isRead}`); // –û—Ç–ª–∞–¥–∫–∞
        
        const div = document.createElement('div');
        div.className = `case-item ${isRead ? 'read' : 'unread'}`;
        div.dataset.index = index;
        div.dataset.caseId = caseId;
        
        div.innerHTML = `
            <div class="case-item-title">${caseItem.title}</div>
            <div class="case-item-description">${caseItem.description}</div>
            <div class="case-item-meta">
                <div class="meta-item">
                    <span class="meta-label">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</span>
                    <span class="priority-badge priority-${caseItem.priority.toLowerCase()}">${caseItem.priority}</span>
            </div>
                <div class="meta-item">
                    <span class="meta-label">–°–ª–æ–∂–Ω–æ—Å—Ç—å:</span>
                    <span class="meta-value">${caseItem.complexity}</span>
                </div>
            </div>
            <div class="case-tools">
                ${caseItem.tools.map(tool => `<span class="tool-tag">${tool}</span>`).join('')}
            </div>
        `;
        
        // Add click handler
        div.addEventListener('click', () => {
            this.selectCase(caseItem, index, div, caseId);
        });
        
        return div;
    }

    selectCase(caseItem, index, element, caseId) {
        // Remove active class from all items
        document.querySelectorAll('.case-item').forEach(item => {
            item.classList.remove('active');
        });
        
        // Add active class to selected item
        element.classList.add('active');
        
        // –ü–æ–º–µ—Ç–∏—Ç—å –∫–µ–π—Å –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–π
        this.markCaseAsRead(caseId);
        
        // Display case details in right panel
        this.displayCaseDetails(caseItem, index);
    }

    displayCaseDetails(caseItem, index) {
        const caseDetails = document.getElementById('caseDetails');
        
        caseDetails.innerHTML = `
            <div class="case-detail-content">
                <div class="detail-section">
                    <h4>${caseItem.title}</h4>
                    <div class="detail-text">${caseItem.description}</div>
                </div>
                
                <div class="detail-section">
                    <h4>–ú–µ—Ç—Ä–∏–∫–∏</h4>
                    <div class="case-item-meta">
                <div class="meta-item">
                    <span class="meta-label">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</span>
                            <span class="priority-badge priority-${caseItem.priority.toLowerCase()}">${caseItem.priority}</span>
                </div>
                <div class="meta-item">
                    <span class="meta-label">–°–ª–æ–∂–Ω–æ—Å—Ç—å:</span>
                            <span class="meta-value">${caseItem.complexity}</span>
                        </div>
                </div>
            </div>
            
                <div class="detail-section">
                    <h4>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</h4>
            <div class="case-tools">
                    ${caseItem.tools.map(tool => `<span class="tool-tag">${tool}</span>`).join('')}
                </div>
            </div>
            
                <div class="detail-section">
                    <h4>–ü–∞–π–ø–ª–∞–π–Ω –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏</h4>
                    <div class="pipeline-steps">
                        ${caseItem.automationPipeline.steps.map(step => `
                            <div class="pipeline-step" data-step="${step.step}">
                                <div class="step-content">
                                    <div class="step-action">${step.action}</div>
                                    <div class="step-tool">${step.tool}</div>
                                    <div class="step-description">${step.description}</div>
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>
                
                <div class="detail-section">
                    <h4>–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç</h4>
                    <div class="detail-text" style="max-height: 200px; overflow-y: auto; font-family: monospace; font-size: 11px; background: var(--bg-primary); padding: 12px; border-radius: 4px; border: 1px solid var(--border-color);">
                        ${caseItem.systemPrompt}
                    </div>
                </div>
                
                <div class="export-actions">
                    <button class="export-btn" onclick="app.showSystemPrompt('${caseItem.title}', \`${caseItem.systemPrompt.replace(/`/g, '\\`')}\`)">
                        –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–º–ø—Ç
                    </button>
                    <button class="export-btn" onclick="app.exportWorkflowJSON(${JSON.stringify(caseItem).replace(/"/g, '&quot;')}, ${index})">
                        –°–∫–∞—á–∞—Ç—å Make JSON
                    </button>
                    <button class="export-btn" onclick="app.exportN8nJSON(${JSON.stringify(caseItem).replace(/"/g, '&quot;')}, ${index})">
                        –°–∫–∞—á–∞—Ç—å n8n JSON
                    </button>
                    <button class="export-btn" onclick="app.exportCaseMarkdown(${JSON.stringify(caseItem).replace(/"/g, '&quot;')}, ${index})">
                        –°–∫–∞—á–∞—Ç—å MD
                    </button>
                </div>
            </div>
        `;
    }

    updateCasesCount(count) {
        document.getElementById('casesCount').textContent = `${count} –∫–µ–π—Å${count === 1 ? '' : count < 5 ? '–∞' : '–æ–≤'}`;
    }

    addMoreResults(newRecommendations) {
        // Add new cases to current results
        this.currentResults.automationCases = [...this.currentResults.automationCases, ...newRecommendations.automationCases];
        
        // Update display
        this.displayCasesList(this.currentResults.automationCases);
        this.updateCasesCount(this.currentResults.automationCases.length);
        
        this.showSuccess(`–î–æ–±–∞–≤–ª–µ–Ω–æ ${newRecommendations.automationCases.length} –Ω–æ–≤—ã—Ö –∫–µ–π—Å–æ–≤`);
    }

    exportN8nJSON(caseItem, index) {
        const n8nWorkflow = this.generateN8nWorkflow(caseItem);
        const fileName = `n8n-${this.slugify(caseItem.title)}.json`;
        this.downloadJSON(n8nWorkflow, fileName);
        this.showSuccess('n8n workflow —Å–∫–∞—á–∞–Ω!');
    }

    clearResults() {
        this.currentResults = null;
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è —Ç–µ–∫—É—â–∏—Ö –∫–µ–π—Å–æ–≤
        this.clearReadCases();
        
        // Hide analysis section
        document.getElementById('analysisSection').classList.add('hidden');
        
        // Clear cases list
        const casesList = document.getElementById('casesList');
        casesList.innerHTML = `
            <div class="empty-state">
                <div class="empty-icon">ü§ñ</div>
                <p>–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å –∏ –Ω–∞–∂–º–∏—Ç–µ "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏" —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∫–µ–π—Å—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏</p>
            </div>
        `;
        
        // Clear case details
        const caseDetails = document.getElementById('caseDetails');
        caseDetails.innerHTML = `
            <div class="empty-state">
                <div class="empty-icon">üìã</div>
                <p>–í—ã–±–µ—Ä–∏—Ç–µ –∫–µ–π—Å –∏–∑ —Å–ø–∏—Å–∫–∞ —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –ø–∞–π–ø–ª–∞–π–Ω –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç</p>
            </div>
        `;
        
        // Update cases count
        this.updateCasesCount(0);
        
        // Hide generate more button
        document.getElementById('generateMoreBtn').classList.add('hidden');
    }

    // –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –∫–µ–π—Å—ã
    clearReadCases() {
        this.readCases.clear();
        this.saveReadCases();
    }

    downloadJSON(data, filename) {
        const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = filename;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
    }

    showLoading(show) {
        const btn = document.getElementById('analyzeBtn');
        const progressContainer = document.getElementById('generationProgress');
        
        console.log('showLoading called with show:', show);
        console.log('analyzeBtn element found:', !!btn);
        console.log('generationProgress element found:', !!progressContainer);
        
        if (!btn || !progressContainer) {
            console.error('Required elements not found for loading state');
            return;
        }
        
        if (show) {
            // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
            btn.style.display = 'none';
            progressContainer.classList.remove('hidden');
            
            // –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            this.startProgressAnimation();
        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∏ —Å–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
            btn.style.display = 'flex';
            progressContainer.classList.add('hidden');
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
            this.resetProgress();
        }
    }

    startProgressAnimation() {
        const progressFill = document.getElementById('progressFill');
        const progressTexts = [
            '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à—É —Ä–æ–ª—å...',
            '–ò—â–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ–º—ã–µ –∑–∞–¥–∞—á–∏...',
            '–°–æ–∑–¥–∞–µ–º –∫–µ–π—Å—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏...',
            '–§–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...'
        ];
        
        console.log('startProgressAnimation called');
        console.log('progressFill element found:', !!progressFill);
        
        if (!progressFill) {
            console.error('progressFill element not found');
            return;
        }
        
        let currentStep = 0;
        const totalSteps = progressTexts.length;
        
        // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        const progressInterval = setInterval(() => {
            if (currentStep < totalSteps) {
                // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
                const progress = ((currentStep + 1) / totalSteps) * 100;
                progressFill.style.width = progress + '%';
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
                const progressText = document.querySelector('.progress-text');
                if (progressText) {
                    progressText.textContent = progressTexts[currentStep];
                }
                
                currentStep++;
            } else {
                clearInterval(progressInterval);
            }
        }, 1500); // –ö–∞–∂–¥—ã–µ 1.5 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —à–∞–≥
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—á–∏—Å—Ç–∫–∏
        this.progressInterval = progressInterval;
    }

    resetProgress() {
        if (this.progressInterval) {
            clearInterval(this.progressInterval);
            this.progressInterval = null;
        }
        
        const progressFill = document.getElementById('progressFill');
        const progressText = document.querySelector('.progress-text');
        
        // –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
        progressFill.style.width = '0%';
        progressText.textContent = '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...';
    }

    showMoreLoading(show) {
        const btn = document.getElementById('generateMoreBtn');
        const btnText = btn.querySelector('.btn-text');
        const btnLoader = btn.querySelector('.btn-loader');
        
        if (show) {
            btnText.style.display = 'none';
            btnLoader.style.display = 'inline-block';
            btn.disabled = true;
        } else {
            btnText.style.display = 'inline-block';
            btnLoader.style.display = 'none';
            btn.disabled = false;
        }
    }

    showTestLoading(show) {
        const btn = document.getElementById('testApiBtn');
        const btnText = btn.querySelector('.btn-text');
        const btnLoader = btn.querySelector('.btn-loader');
        
        if (show) {
            btnText.style.display = 'none';
            btnLoader.style.display = 'inline-block';
            btn.disabled = true;
        } else {
            btnText.style.display = 'inline-block';
            btnLoader.style.display = 'none';
            btn.disabled = false;
        }
    }

    showError(message) {
        this.showMessage(message, 'error');
    }

    showSuccess(message) {
        this.showMessage(message, 'success');
    }

    showMessage(message, type) {
        // Remove any existing messages
        this.removeMessages();
        
        // Create message element
        const messageDiv = document.createElement('div');
        messageDiv.className = `message message-${type}`;
        messageDiv.textContent = message;
        
        // Add to container
        const container = document.getElementById('messagesContainer');
        container.appendChild(messageDiv);
        
        // Remove after 5 seconds
        setTimeout(() => {
            if (messageDiv.parentNode) {
                messageDiv.parentNode.removeChild(messageDiv);
            }
        }, 5000);
    }

    removeMessages() {
        const container = document.getElementById('messagesContainer');
        container.innerHTML = '';
    }

    exportWorkflowJSON(caseItem, index) {
        const platform = caseItem.automationPipeline?.platform || 'Make';
        let workflowJSON;
        
        if (platform.toLowerCase().includes('make')) {
            workflowJSON = this.generateMakeWorkflow(caseItem);
        } else {
            workflowJSON = this.generateN8nWorkflow(caseItem);
        }
        
        const blob = new Blob([JSON.stringify(workflowJSON, null, 2)], {
            type: 'application/json'
        });
        
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `${this.slugify(caseItem.title)}-${platform.toLowerCase()}-workflow.json`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        
        this.showSuccess(`${platform} workflow JSON —Å–∫–∞—á–∞–Ω`);
    }

    generateMakeWorkflow(caseItem) {
        const modules = caseItem.automationPipeline?.steps?.map((step, index) => ({
            id: index + 1,
            module: step.tool.replace(/\s+/g, '').toLowerCase(),
            version: 1,
            parameters: {},
            mapper: {},
            metadata: {
                designer: {
                    x: 100 + (index * 200),
                    y: 100
                },
                restore: {},
                parameters: [],
                expect: []
            }
        })) || [];

        return {
            name: caseItem.title,
            description: caseItem.description,
            flow: modules,
            metadata: {
                instant: false,
                version: 1,
                scenario: {
                    roundtrips: 1,
                    maxErrors: 3,
                    autoCommit: true,
                    autoCommitTriggerLast: true,
                    sequential: false,
                    slots: null,
                    confidential: false,
                    dataloss: false,
                    dlq: false,
                    freshVariables: false
                },
                designer: {
                    orphans: []
                },
                zone: "eu1.make.com"
            }
        };
    }

    generateN8nWorkflow(caseItem) {
        const nodes = caseItem.automationPipeline?.steps?.map((step, index) => ({
            id: `node_${index}`,
            name: step.action,
            type: step.tool.replace(/\s+/g, '').toLowerCase(),
            typeVersion: 1,
            position: [100 + (index * 200), 100],
            parameters: {},
            credentials: {},
            webhookId: index === 0 ? "webhook_id" : undefined
        })) || [];

        const connections = {};
        nodes.forEach((node, index) => {
            if (index < nodes.length - 1) {
                connections[node.name] = {
                    main: [[{
                        node: nodes[index + 1].name,
                        type: "main",
                        index: 0
                    }]]
                };
            }
        });

        return {
            name: caseItem.title,
            nodes: nodes,
            connections: connections,
            active: false,
            settings: {},
            createdAt: new Date().toISOString(),
            updatedAt: new Date().toISOString(),
            versionId: "1",
            id: `workflow_${Date.now()}`
        };
    }

    exportCaseMarkdown(caseItem, index) {
        const platform = caseItem.automationPipeline?.platform || 'Make';
        const workflowJSON = platform.toLowerCase().includes('make') 
            ? this.generateMakeWorkflow(caseItem) 
            : this.generateN8nWorkflow(caseItem);
        
        const markdown = `# ${caseItem.title}

## üìã –û–ø–∏—Å–∞–Ω–∏–µ –∫–µ–π—Å–∞
${caseItem.description}

## üìä –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
- **–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:** ${caseItem.priority}
- **–°–ª–æ–∂–Ω–æ—Å—Ç—å:** ${caseItem.complexity}
- **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏:** ${platform}

## üõ† –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
${caseItem.tools.map(tool => `- ${tool}`).join('\n')}

## üîÑ –ü–∞–π–ø–ª–∞–π–Ω –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏

${caseItem.automationPipeline?.steps?.map(step => 
`### –®–∞–≥ ${step.step}: ${step.action}
- **–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:** ${step.tool}
- **–û–ø–∏—Å–∞–Ω–∏–µ:** ${step.description}`
).join('\n\n') || '–ü–∞–π–ø–ª–∞–π–Ω –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}

## ü§ñ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è AI-–∞–≥–µ–Ω—Ç–∞

\`\`\`
${caseItem.systemPrompt}
\`\`\`

## üì• JSON Workflow –¥–ª—è ${platform}

\`\`\`json
${JSON.stringify(workflowJSON, null, 2)}
\`\`\`

---

*–°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é AI-agent scout*
*–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${new Date().toLocaleDateString('ru-RU')}*
`;

        const blob = new Blob([markdown], {
            type: 'text/markdown;charset=utf-8'
        });
        
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `${this.slugify(caseItem.title)}-automation-case.md`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        
        this.showSuccess('Markdown —Ñ–∞–π–ª —Å–∫–∞—á–∞–Ω');
    }

    slugify(text) {
        return text
            .toLowerCase()
            .replace(/[^\w\s-]/g, '') // Remove special characters
            .replace(/[\s_-]+/g, '-') // Replace spaces and underscores with hyphens
            .replace(/^-+|-+$/g, ''); // Remove leading/trailing hyphens
    }

    showSystemPrompt(title, prompt) {
        document.getElementById('modalTitle').textContent = `–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç: ${title}`;
        document.getElementById('systemPromptContent').textContent = prompt;
        document.getElementById('promptModal').classList.remove('hidden');
        document.body.style.overflow = 'hidden';
    }

    closeModal() {
        document.getElementById('promptModal').classList.add('hidden');
        document.body.style.overflow = 'auto';
    }

    async copyPrompt() {
        const promptContent = document.getElementById('systemPromptContent').textContent;
        
        try {
            await navigator.clipboard.writeText(promptContent);
            this.showSuccess('–ü—Ä–æ–º–ø—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
        } catch (error) {
            // Fallback for older browsers
            const textArea = document.createElement('textarea');
            textArea.value = promptContent;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand('copy');
            document.body.removeChild(textArea);
            this.showSuccess('–ü—Ä–æ–º–ø—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
        }
    }

    async testApiConnection() {
        if (!this.apiKey) {
            this.showError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á');
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–ª—é—á–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
        const keyValidation = {
            'openai': (key) => key.startsWith('sk-'),
            'anthropic': (key) => key.startsWith('sk-ant-'),
            'gigachat': (key) => key.length > 10, // –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
            'yandexgpt': (key) => key.length > 10 // –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        };

        if (keyValidation[this.apiProvider] && !keyValidation[this.apiProvider](this.apiKey)) {
            const expectedFormats = {
                'openai': 'API –∫–ª—é—á –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å "sk-"',
                'anthropic': 'API –∫–ª—é—á –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å "sk-ant-"',
                'gigachat': '–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ GigaChat',
                'yandexgpt': '–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω YandexGPT'
            };
            this.showError(expectedFormats[this.apiProvider]);
            return;
        }

        this.showTestLoading(true);
        
        try {
            console.log(`=== Testing ${this.apiProvider.toUpperCase()} API Connection ===`);
            console.log('API Key length:', this.apiKey.length);
            
            let testResult;
            switch (this.apiProvider) {
                case 'openai':
                    testResult = await this.testOpenAIConnection();
                    break;
                case 'anthropic':
                    testResult = await this.testClaudeConnection();
                    break;
                case 'gigachat':
                    testResult = await this.testGigaChatConnection();
                    break;
                case 'yandexgpt':
                    testResult = await this.testYandexGPTConnection();
                    break;
                default:
                    throw new Error('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä');
            }

            if (testResult.success) {
                this.showSuccess(`‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ ${this.apiProvider.toUpperCase()} API —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!`);
            } else {
                throw new Error(testResult.error);
            }

        } catch (error) {
            console.error(`=== ${this.apiProvider.toUpperCase()} API Test Error ===`);
            console.error('Error name:', error.name);
            console.error('Error message:', error.message);
            
            if (error.name === 'TypeError' && error.message.includes('Failed to fetch')) {
                if (this.apiProvider === 'openai' || this.apiProvider === 'anthropic') {
                    this.showError(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å ${this.apiProvider.toUpperCase()} API. –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –†–æ—Å—Å–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è VPN.`);
                } else {
                    this.showError(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å ${this.apiProvider.toUpperCase()} API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.`);
                }
            } else if (error.name === 'TypeError' && error.message.includes('NetworkError')) {
                this.showError('‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.');
            } else if (error.message.includes('CORS')) {
                this.showError('‚ùå CORS –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π –±—Ä–∞—É–∑–µ—Ä.');
            } else {
                this.showError('‚ùå ' + error.message);
            }
        } finally {
            this.showTestLoading(false);
        }
    }

    async testOpenAIConnection() {
        const response = await fetch('https://api.openai.com/v1/chat/completions', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json; charset=utf-8',
                'Authorization': `Bearer ${this.apiKey}`
            },
            body: JSON.stringify({
                model: 'gpt-4o-mini',
                messages: [{ role: 'user', content: '–¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –û—Ç–≤–µ—Ç—å "OK"' }],
                max_tokens: 10,
                temperature: 0
            })
        });

        if (!response.ok) {
            const errorText = await response.text();
            let errorData;
            try {
                errorData = JSON.parse(errorText);
            } catch (e) {
                return { success: false, error: `HTTP ${response.status}: ${errorText}` };
            }
            
            if (response.status === 401) {
                return { success: false, error: '–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á OpenAI' };
            } else if (response.status === 429) {
                return { success: false, error: '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ OpenAI' };
            } else {
                return { success: false, error: `HTTP ${response.status}: ${errorData.error?.message || errorText}` };
            }
        }

        const data = await response.json();
        return { success: true, data };
    }

    async testClaudeConnection() {
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Claude
        return { success: false, error: 'Claude API –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω' };
    }

    async testGigaChatConnection() {
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è GigaChat  
        return { success: false, error: 'GigaChat API –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω' };
    }

    async testYandexGPTConnection() {
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è YandexGPT
        return { success: false, error: 'YandexGPT API –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω' };
    }

    updateApiKeyPlaceholder() {
        const apiKeyInput = document.getElementById('apiKey');
        const placeholders = {
            'openai': 'sk-...',
            'anthropic': 'sk-ant-...',
            'gigachat': '–¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ GigaChat',
            'yandexgpt': '–¢–æ–∫–µ–Ω YandexGPT'
        };
        apiKeyInput.placeholder = placeholders[this.apiProvider] || '–í–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á...';
    }

    async callAIForMore(roleDescription, existingTitles) {
        switch (this.apiProvider) {
            case 'openai':
                return await this.callOpenAIForMore(roleDescription, existingTitles);
            case 'anthropic':
                return await this.callClaudeForMore(roleDescription, existingTitles);
            case 'gigachat':
                return await this.callGigaChatForMore(roleDescription, existingTitles);
            case 'yandexgpt':
                return await this.callYandexGPTForMore(roleDescription, existingTitles);
            default:
                throw new Error('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä');
        }
    }

    async callClaude(roleDescription) {
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è Claude API - –ø–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback
        console.log('Claude API –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
        return this.getFallbackResponse();
    }

    async callGigaChat(roleDescription) {
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è GigaChat API - –ø–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback
        console.log('GigaChat API –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
        return this.getFallbackResponse();
    }

    async callYandexGPT(roleDescription) {
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è YandexGPT API - –ø–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback
        console.log('YandexGPT API –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
        return this.getFallbackResponse();
    }

    async callClaudeForMore(roleDescription, existingTitles) {
        console.log('Claude API –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
        return this.getFallbackMoreResponse();
    }

    async callGigaChatForMore(roleDescription, existingTitles) {
        console.log('GigaChat API –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
        return this.getFallbackMoreResponse();
    }

    async callYandexGPTForMore(roleDescription, existingTitles) {
        console.log('YandexGPT API –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
        return this.getFallbackMoreResponse();
    }

    getFallbackResponse() {
        return {
            roleAnalysis: "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã–±—Ä–∞–Ω–Ω—ã–π AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback-–æ—Ç–≤–µ—Ç —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.",
            bestPractices: "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–∞—á–∞—Ç—å —Å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç—ã—Ö –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –∑–∞–¥–∞—á –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–∞–º.",
            automationCases: [
                {
                    title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è email-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π",
                    description: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Ç–∏–ø–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã",
                    priority: "–≤—ã—Å–æ–∫–∏–π",
                    roiEstimate: "20-30%",
                    complexity: "–Ω–∏–∑–∫–∞—è",
                    tools: ["Zapier", "Gmail API"],
                    systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ email-–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤—Ö–æ–¥—è—â–∏–µ –ø–∏—Å—å–º–∞ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–π –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –æ—Ç–≤–µ—Ç—ã. –°–æ—Ä—Ç–∏—Ä—É–π –ø–∏—Å—å–º–∞ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É –∏ —Å–æ–∑–¥–∞–≤–∞–π –∫—Ä–∞—Ç–∫–∏–µ —Å–≤–æ–¥–∫–∏ –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è.",
                    automationPipeline: {
                        platform: "Make",
                        steps: [
                            {
                                step: 1,
                                action: "–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ email",
                                tool: "Gmail",
                                description: "–¢—Ä–∏–≥–≥–µ—Ä –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞"
                            },
                            {
                                step: 2,
                                action: "–ê–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ",
                                tool: "OpenAI",
                                description: "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–º—ã –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –ø–∏—Å—å–º–∞"
                            },
                            {
                                step: 3,
                                action: "–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
                                tool: "Telegram",
                                description: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram –æ –≤–∞–∂–Ω–æ–º –ø–∏—Å—å–º–µ"
                            }
                        ]
                    }
                },
                {
                    title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á",
                    description: "–£–º–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è –≤—Å—Ç—Ä–µ—á —Å –∫–æ–º–∞–Ω–¥–æ–π",
                    priority: "—Å—Ä–µ–¥–Ω–∏–π",
                    roiEstimate: "15-25%",
                    complexity: "—Å—Ä–µ–¥–Ω—è—è",
                    tools: ["Calendly", "Google Calendar API"],
                    systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –ø—Ä–µ–¥–ª–∞–≥–∞–π –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è.",
                    automationPipeline: {
                        platform: "Make",
                        steps: [
                            {
                                step: 1,
                                action: "–ê–Ω–∞–ª–∏–∑ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤",
                                tool: "Google Calendar",
                                description: "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—è—Ö"
                            },
                            {
                                step: 2,
                                action: "–ü–æ–∏—Å–∫ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
                                tool: "OpenAI",
                                description: "–ê–ª–≥–æ—Ä–∏—Ç–º –ø–æ–∏—Å–∫–∞ –ª—É—á—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"
                            },
                            {
                                step: 3,
                                action: "–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π",
                                tool: "Gmail",
                                description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π"
                            }
                        ]
                    }
                },
                {
                    title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤",
                    description: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö",
                    priority: "–≤—ã—Å–æ–∫–∏–π",
                    roiEstimate: "25-40%",
                    complexity: "–≤—ã—Å–æ–∫–∞—è",
                    tools: ["Google Sheets", "Power BI"],
                    systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤. –°–æ–±–∏—Ä–∞–π –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∏ —Å–æ–∑–¥–∞–≤–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Å –∫–ª—é—á–µ–≤—ã–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏ –∏ –≤—ã–≤–æ–¥–∞–º–∏.",
                    automationPipeline: {
                        platform: "n8n",
                        steps: [
                            {
                                step: 1,
                                action: "–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤",
                                tool: "Google Sheets",
                                description: "–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü"
                            },
                            {
                                step: 2,
                                action: "–ê–Ω–∞–ª–∏–∑ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞",
                                tool: "OpenAI",
                                description: "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –≤—ã–≤–æ–¥–æ–≤"
                            },
                            {
                                step: 3,
                                action: "–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞",
                                tool: "Power BI",
                                description: "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞"
                            }
                        ]
                    }
                },
                {
                    title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏",
                    description: "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á",
                    priority: "—Å—Ä–µ–¥–Ω–∏–π",
                    roiEstimate: "20-35%",
                    complexity: "—Å—Ä–µ–¥–Ω—è—è",
                    tools: ["Trello", "Slack API"],
                    systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–º–∞–Ω–¥—ã, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–π –∑–∞–¥–∞—á–∏ –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ —Å —É—á–µ—Ç–æ–º –∏—Ö –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π.",
                    automationPipeline: {
                        platform: "Make",
                        steps: [
                            {
                                step: 1,
                                action: "–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏",
                                tool: "Trello",
                                description: "–¢—Ä–∏–≥–≥–µ—Ä –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏"
                            },
                            {
                                step: 2,
                                action: "–ê–Ω–∞–ª–∏–∑ –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ",
                                tool: "OpenAI",
                                description: "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞"
                            },
                            {
                                step: 3,
                                action: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã",
                                tool: "Slack",
                                description: "–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª"
                            }
                        ]
                    }
                },
                {
                    title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–æ–ª—è –∫–∞—á–µ—Å—Ç–≤–∞",
                    description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã",
                    priority: "–Ω–∏–∑–∫–∏–π",
                    roiEstimate: "15-30%",
                    complexity: "–≤—ã—Å–æ–∫–∞—è",
                    tools: ["Jira", "GitHub API"],
                    systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –∫–∞—á–µ—Å—Ç–≤–∞. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏, –ø—Ä–æ–≤–µ—Ä—è–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–≤–∞–π –æ—Ç—á–µ—Ç—ã –æ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã.",
                    automationPipeline: {
                        platform: "n8n",
                        steps: [
                            {
                                step: 1,
                                action: "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á",
                                tool: "Jira",
                                description: "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á"
                            },
                            {
                                step: 2,
                                action: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞",
                                tool: "OpenAI",
                                description: "–ê–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º"
                            },
                            {
                                step: 3,
                                action: "–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞",
                                tool: "Google Docs",
                                description: "–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –∫–∞—á–µ—Å—Ç–≤–µ"
                            }
                        ]
                    }
                },
                {
                    title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ–±—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã",
                    description: "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
                    priority: "–Ω–∏–∑–∫–∏–π",
                    roiEstimate: "10-25%",
                    complexity: "—Å—Ä–µ–¥–Ω—è—è",
                    tools: ["LMS", "Notion API"],
                    systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –Ω–∞–≤—ã–∫–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –≤—ã—è–≤–ª—è–π –ø—Ä–æ–±–µ–ª—ã –≤ –∑–Ω–∞–Ω–∏—è—Ö –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è.",
                    automationPipeline: {
                        platform: "Make",
                        steps: [
                            {
                                step: 1,
                                action: "–ê–Ω–∞–ª–∏–∑ –Ω–∞–≤—ã–∫–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
                                tool: "Google Forms",
                                description: "–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏—è—Ö"
                            },
                            {
                                step: 2,
                                action: "–ü–æ–¥–±–æ—Ä –æ–±—É—á–∞—é—â–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤",
                                tool: "OpenAI",
                                description: "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è"
                            },
                            {
                                step: 3,
                                action: "–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–Ω–∞ –æ–±—É—á–µ–Ω–∏—è",
                                tool: "Notion",
                                description: "–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∞"
                            }
                        ]
                    }
                }
            ]
        };
    }

    getFallbackMoreResponse() {
        return {
            roleAnalysis: "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã–±—Ä–∞–Ω–Ω—ã–π AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback-–æ—Ç–≤–µ—Ç —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.",
            bestPractices: "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–∞—á–∞—Ç—å —Å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç—ã—Ö –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –∑–∞–¥–∞—á –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–∞–º.",
            automationCases: [
                {
                    title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏",
                    description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –∏ –º–µ—Å—è—á–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤",
                    priority: "—Å—Ä–µ–¥–Ω–∏–π",
                    roiEstimate: "15-25%",
                    complexity: "—Å—Ä–µ–¥–Ω—è—è",
                    tools: ["Google Sheets API", "Power BI"],
                    systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏. –°–æ–±–∏—Ä–∞–π –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç—Ä–µ–Ω–¥—ã –∏ —Å–æ–∑–¥–∞–≤–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Å –∫–ª—é—á–µ–≤—ã–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏.",
                    automationPipeline: {
                        platform: "Make",
                        steps: [
                            {
                                step: 1,
                                action: "–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets",
                                tool: "Google Sheets API",
                                description: "–¢—Ä–∏–≥–≥–µ—Ä –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
                            },
                            {
                                step: 2,
                                action: "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö",
                                tool: "Power BI",
                                description: "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞"
                            },
                            {
                                step: 3,
                                action: "–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞",
                                tool: "Email",
                                description: "–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –Ω–∞ email —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è"
                            }
                        ]
                    }
                },
                {
                    title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π",
                    description: "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö",
                    priority: "–Ω–∏–∑–∫–∏–π",
                    roiEstimate: "10-20%",
                    complexity: "–Ω–∏–∑–∫–∞—è",
                    tools: ["Buffer", "Telegram Bot API"],
                    systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–µ—Ç—è–º–∏. –°–æ–∑–¥–∞–≤–∞–π –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω, –ø–ª–∞–Ω–∏—Ä—É–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ—Å—Ç–æ–≤.",
                    automationPipeline: {
                        platform: "Make",
                        steps: [
                            {
                                step: 1,
                                action: "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
                                tool: "OpenAI",
                                description: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π"
                            },
                            {
                                step: 2,
                                action: "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏",
                                tool: "Buffer",
                                description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤ —Å–æ—Ü—Å–µ—Ç–∏"
                            }
                        ]
                    }
                },
                {
                    title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
                    description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
                    priority: "—Å—Ä–µ–¥–Ω–∏–π",
                    roiEstimate: "25-35%",
                    complexity: "–≤—ã—Å–æ–∫–∞—è",
                    tools: ["OCR API", "Google Drive API"],
                    systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –ò–∑–≤–ª–µ–∫–∞–π —Ç–µ–∫—Å—Ç –∏–∑ PDF, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –¥–∞–Ω–Ω—ã–µ.",
                    automationPipeline: {
                        platform: "n8n",
                        steps: [
                            {
                                step: 1,
                                action: "–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞",
                                tool: "Google Drive",
                                description: "–¢—Ä–∏–≥–≥–µ—Ä –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞"
                            },
                            {
                                step: 2,
                                action: "–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞",
                                tool: "OCR API",
                                description: "–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ"
                            },
                            {
                                step: 3,
                                action: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö",
                                tool: "OpenAI",
                                description: "–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
                            }
                        ]
                    }
                },
                {
                    title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è backup –¥–∞–Ω–Ω—ã—Ö",
                    description: "–†–µ–≥—É–ª—è—Ä–Ω–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
                    priority: "–≤—ã—Å–æ–∫–∏–π",
                    roiEstimate: "40-60%",
                    complexity: "—Å—Ä–µ–¥–Ω—è—è",
                    tools: ["Google Drive API", "Yandex.Disk API"],
                    systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è. –°–ª–µ–¥–∏ –∑–∞ –≤–∞–∂–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏, —Å–æ–∑–¥–∞–≤–∞–π –±—ç–∫–∞–ø—ã –∏ —É–≤–µ–¥–æ–º–ª—è–π –æ —Å—Ç–∞—Ç—É—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–π.",
                    automationPipeline: {
                        platform: "Make",
                        steps: [
                            {
                                step: 1,
                                action: "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤",
                                tool: "File System",
                                description: "–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
                            },
                            {
                                step: 2,
                                action: "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞",
                                tool: "Google Drive",
                                description: "–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
                            },
                            {
                                step: 3,
                                action: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ",
                                tool: "Telegram",
                                description: "–û—Ç—á–µ—Ç –æ —Å—Ç–∞—Ç—É—Å–µ –±—ç–∫–∞–ø–∞"
                            }
                        ]
                    }
                },
                {
                    title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤",
                    description: "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ü–µ–Ω –∏ –Ω–æ–≤–æ—Å—Ç–µ–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤",
                    priority: "–Ω–∏–∑–∫–∏–π",
                    roiEstimate: "15-30%",
                    complexity: "—Å—Ä–µ–¥–Ω—è—è",
                    tools: ["Web Scraping", "RSS Parser"],
                    systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤. –û—Ç—Å–ª–µ–∂–∏–≤–∞–π –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω, –Ω–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ –Ω–æ–≤–æ—Å—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–π-–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤.",
                    automationPipeline: {
                        platform: "n8n",
                        steps: [
                            {
                                step: 1,
                                action: "–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–æ–≤",
                                tool: "Web Scraper",
                                description: "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–æ–≤ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤"
                            },
                            {
                                step: 2,
                                action: "–ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π",
                                tool: "OpenAI",
                                description: "–í—ã—è–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–∏–º—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π"
                            },
                            {
                                step: 3,
                                action: "–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞",
                                tool: "Slack",
                                description: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö"
                            }
                        ]
                    }
                },
                {
                    title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏",
                    description: "–£—á–µ—Ç –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π",
                    priority: "—Å—Ä–µ–¥–Ω–∏–π",
                    roiEstimate: "20-35%",
                    complexity: "–Ω–∏–∑–∫–∞—è",
                    tools: ["QR Scanner", "Google Sheets"],
                    systemPrompt: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º. –û—Ç—Å–ª–µ–∂–∏–≤–∞–π –¥–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π –æ—Å—Ç–∞—Ç–∫–∏ –∏ –ø–ª–∞–Ω–∏—Ä—É–π –∑–∞–∫—É–ø–∫–∏.",
                    automationPipeline: {
                        platform: "Make",
                        steps: [
                            {
                                step: 1,
                                action: "–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ QR-–∫–æ–¥–∞",
                                tool: "QR Scanner",
                                description: "–°—á–∏—Ç—ã–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ"
                            },
                            {
                                step: 2,
                                action: "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã",
                                tool: "Google Sheets",
                                description: "–ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É"
                            },
                            {
                                step: 3,
                                action: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤",
                                tool: "OpenAI",
                                description: "–ê–Ω–∞–ª–∏–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ–∫—É–ø–∫–∏"
                            }
                        ]
                    }
                }
            ]
        };
    }

    testFallback() {
        console.log('Testing fallback functionality...');
        const fallbackData = this.getFallbackResponse();
        this.displayResults(fallbackData);
        this.showSuccess('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –ü–æ–∫–∞–∑–∞–Ω—ã –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ (6 –∫–µ–π—Å–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏)');
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –∫–µ–π—Å–æ–≤ –∏–∑ localStorage
    loadReadCases() {
        try {
            const savedReadCases = localStorage.getItem('ai-scout-read-cases');
            if (savedReadCases) {
                this.readCases = new Set(JSON.parse(savedReadCases));
            }
        } catch (error) {
            console.error('Error loading read cases:', error);
            this.readCases = new Set();
        }
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –∫–µ–π—Å–æ–≤ –≤ localStorage
    saveReadCases() {
        try {
            localStorage.setItem('ai-scout-read-cases', JSON.stringify([...this.readCases]));
        } catch (error) {
            console.error('Error saving read cases:', error);
        }
    }

    // –ü–æ–º–µ—Ç–∏—Ç—å –∫–µ–π—Å –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–π
    markCaseAsRead(caseId) {
        console.log(`Marking case as read: ${caseId}`); // –û—Ç–ª–∞–¥–∫–∞
        this.readCases.add(caseId);
        this.saveReadCases();
        this.updateCaseReadStatus(caseId);
        console.log(`Read cases now:`, [...this.readCases]); // –û—Ç–ª–∞–¥–∫–∞
    }

    // –û–±–Ω–æ–≤–∏—Ç—å –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–µ–π—Å–∞
    updateCaseReadStatus(caseId) {
        const caseElement = document.querySelector(`[data-case-id="${caseId}"]`);
        console.log(`Updating case status for ${caseId}, element found:`, !!caseElement); // –û—Ç–ª–∞–¥–∫–∞
        
        if (caseElement) {
            if (this.readCases.has(caseId)) {
                caseElement.classList.remove('unread');
                caseElement.classList.add('read');
                console.log(`Case ${caseId} marked as read`); // –û—Ç–ª–∞–¥–∫–∞
            } else {
                caseElement.classList.remove('read');
                caseElement.classList.add('unread');
                console.log(`Case ${caseId} marked as unread`); // –û—Ç–ª–∞–¥–∫–∞
            }
        } else {
            console.error(`Case element not found for ID: ${caseId}`); // –û—Ç–ª–∞–¥–∫–∞
        }
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –¥–ª—è –∫–µ–π—Å–∞ (—É–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    generateCaseId(caseItem, index) {
        // –°–æ–∑–¥–∞–µ–º –±–æ–ª–µ–µ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π ID –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –∏–Ω–¥–µ–∫—Å–∞
        const title = caseItem.title || '';
        const description = caseItem.description || '';
        const baseString = `${title}-${description}-${index}`;
        
        // –ü—Ä–æ—Å—Ç–æ–µ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏
        let hash = 0;
        for (let i = 0; i < baseString.length; i++) {
            const char = baseString.charCodeAt(i);
            hash = ((hash << 5) - hash) + char;
            hash = hash & hash; // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ 32-–±–∏—Ç–Ω–æ–µ —á–∏—Å–ª–æ
        }
        
        return `case-${Math.abs(hash)}-${index}`;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = new AIDelegate();

// Handle escape key for modal
document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
        const modal = document.getElementById('promptModal');
        if (!modal.classList.contains('hidden')) {
            modal.classList.add('hidden');
            document.body.style.overflow = 'auto';
        }
    }
});